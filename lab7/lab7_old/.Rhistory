msleep %>%
summarise_all(number_nas = sum(is.na(.)))
msleep %>%
summarise_all(funs(sum(is.na(.))))
msleep %>%
summarise_all(~ sum(is.na(.)))
msleep %>%
summarise_all(~ sum(is.na(.)))
#install.packages("naniar")
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
?msleep
summary(msleep)
is.na(msleep)
any_na(msleep)
msleep %>%
summarize(number_nas = sum(is.na(msleep)))
msleep %>%
summarize(number_nas = sum(is.na(conservation)))
msleep %>%
summarise_all(funs(sum(is.na(.))))
msleep %>%
summarise_all(~ sum(is.na(.)))
msleep %>%
purrr::map_df(~ sum(is.na(.))) #map to a new data frame the sum results of the is.na function for all columns
msleep %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
msleep %>%
count(conservation)
msleep %>%
count(conservation, sort = TRUE)
amniota <- readr::read_csv("data/amniota.csv")
summary(amniota)
amniota %>%
summarise_all(funs(sum(is.na(.))))
hist(amniota$egg_mass_g)
amniota_tidy <- amniota %>%
na_if("-999")
amniota_tidy %>%
summarise_all(~sum(is.na(.)))
amniota_tidy <- amniota %>%
na_if("-999")
library("tidyverse")
#for (variable in vector) {
#  do something
#}
for (i in 1:10) {
print(i^2)
}
x <- c(1,2,5,3,10,9,8,11,6)
count <- 0
for (i in x) {
if(i %% 2 == 0)
print(i)
}
for (i in x) {
if(i %% 2 == 0)
count = count+1
}
print(count)
random_number <- sample(1:1000, size = 100)
random_number
for (i in random_number) {
if(i %% 2 == 0)
count = count+1
}
print(count)
#download.file("http://www.datacarpentry.org/semester-biology/data/locations.zip", "locations.zip")
unzip("locations.zip")
list.files()
data_files <- list.files(pattern = "locations-2*",
full.names = TRUE)
data_files
str(data_files)
results <- vector(mode = "integer", length = length(data_files))
results
for (i in 1:length(data_files)){
data <- read_csv(data_files[i])
count <- nrow(data)
results[i] <- count
}
results
results <- data.frame(file_name = vector(mode = "character", length = length(data_files)),
count = vector(mode = "integer", length = length(data_files)),
long = vector(mode = "numeric", length = length(data_files)))
results
for (i in 1:length(data_files)){
data <- read_csv(data_files[i])
count <- nrow(data)
results$file_name[i] <- data_files[i]
results$count[i] <- count
results$long[i] <- data$long
}
results
library(tidyverse)
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
str(mammals)
str(fish)
for (i in 1:length(data_files)){
data <- read_csv(data_files[i])
count <- nrow(data)
results$file_name[i] <- data_files[i]
results$count[i] <- count
results$long[i] <- data$long
results$lat[i] <- data$lat
}
results
download.file("http://www.datacarpentry.org/semester-biology/data/individual_collar_data.zip", "collar.zip")
unzip("collar.zip")
data <- data.frame(x1 = 1:5,    # Create example data
x2 = 6:10,
x3 = 11:15)
data
data1 <- data # Replicate example data
for(i in 1:ncol(data1)) {       # for-loop over columns
data1[ , i] <- data1[ , i] + 10
}
data1
data2 <- data                   # Replicate example data
for(i in 1:nrow(data2)) {       # for-loop over rows
data2[i, ] <- data2[i, ] - 100
}
data2
data2 <- data                   # Replicate example data
for(i in 1:nrow(data2)) {       # for-loop over rows
data2[i, 1] <- data2[i, 1] - 100
}
data2
data3 <- data                   # Replicate example data
i <- 1                          # Create running index
while(i <=2) {                  # Start while-loop
data3[ , i] <- data3[ , i] + 100
i <- i + 1
}
data3
data4 <- data                   # Replicate example data
data4 <- data                   # Replicate example data
i <- 1                          # Create running index
repeat{                         # Start repeat-loop
data4[ , i] <- data4[ , i] + 100
i <- i + 1
if(i > 2) {
break
}
}
data4
x_while <- 0                  # Preliminary specification of data object
while(x_while < 10) {         # Head of while-loop
x_while <- x_while + 1      # Body of while-loop
print(x_while)
}
x_repeat <- 0                 # Preliminary specification of data object
repeat{                       # Head of repeat-loop
x_repeat <- x_repeat + 1    # Body of repeat-loop
print(x_repeat)
if(x_repeat >= 10) {        # Break condition of repeat-loop
break
}
}
data(iris)                          # Loading exemplifying data frame
head(iris)                          # Head of example data
i <- 0                              # Create running index
repeat{                             # Start
i <- i + 1                        # Update running index
if(!is.numeric(iris[ , i])) {     # Break condition
break
}
iris[ , i] <- iris[ , i] + 100    # Change data
}
head(iris)
i <- 0                              # Create running index
repeat{                             # Start
i <- i + 1                        # Update running index
if(!is.numeric(iris[ , i])) {     # Break condition
break
}
iris[ , i] <- iris[ , i] * 10    # Change data
}
head(iris)
data(iris)                          # Loading exemplifying data frame
head(iris)                          # Head of example data
i <- 0                              # Create running index
repeat{                             # Start
i <- i + 1                        # Update running index
if(!is.numeric(iris[ , i])) {     # Break condition
break
}
iris[ , i] <- iris[ , i] * 10    # Change data
}
head(iris)
data(iris)                          # Loading exemplifying data frame
head(iris)                          # Head of example data
iris2 <- iris                   # Replicate example data
i <- 0                              # Create running index
repeat{                             # Start
i <- i + 1                        # Update running index
if(!is.numeric(iris[ , i])) {     # Break condition
break
}
iris2[ , i] <- iris2[ , i] * 10    # Change data
}
head(iris2)
data(iris)                                               # Loading exemplifying data set
head(iris)                                               # Showing head of data in RStudio console
running_index <- 1                                       # Create index
while(is.numeric(iris[ , running_index])) {              # Start of while-loop
iris[ , running_index] <- iris[ , running_index] + 50  # Code block
running_index <- running_index + 1
}
head(iris)                                               # Showing head of updated data
running_index <- 1                                       # Create index
while(is.numeric(iris[ , running_index])) {              # Start of while-loop
iris[ , running_index] <- iris[ , running_index] * 10  # Code block
running_index <- running_index + 1
}
head(iris)                                               # Showing head of updated data
data(iris)                                        # Loading exemplifying data set
head(iris)                                        # Showing head of data in RStudio console
data(iris)                                        # Loading exemplifying data set
head(iris)                                        # Showing head of data in RStudio console
iris2 <- iris                   # Replicate example data
running_index <- 1                                       # Create index
while(is.numeric(iris2[ , running_index])) {              # Start of while-loop
iris2[ , running_index] <- iris2[ , running_index] * 10  # Code block
running_index <- running_index + 1
}
head(iris2)                                               # Showing head of updated data
data(iris)                                                 # Loading iris flower data set
head(iris)                                                 # Inspecting iris flower data set
iris1 <- iris                                          # Replicate iris data set
for(i in 1:ncol(iris1)) {                              # Head of for-loop
if(grepl("Width", colnames(iris_new1)[i])) {             # Logical condition
iris1[ , i] <- iris1[ , i] + 1000              # Code block
}
}
iris1 <- iris                                          # Replicate iris data set
for(i in 1:ncol(iris1)) {                              # Head of for-loop
if(grepl("Width", colnames(iris1)[i])) {             # Logical condition
iris1[ , i] <- iris1[ , i] + 1000              # Code block
}
}
head(iris1)
data(iris)                                                 # Loading iris flower data set
head(iris)                                                 # Inspecting iris flower data set
iris1 <- iris                                          # Replicate iris data set
for(i in 1:ncol(iris1)) {                              # Head of for-loop
if(grepl("Width", colnames(iris1)[i])) {             # Logical condition
iris1[ , i] <- iris1[ , i] * 10              # Code block
}
}
head(iris1)
for(i in 1:(ncol(iris) - 1)) {                             # Head of for-loop
plot(1:nrow(iris), iris[ , i])                           # Code block
Sys.sleep(1)                                             # Pause code execution
}
library("tidyverse")
#for (variable in vector) {
#  do something
#}
for (i in 1:10) {
print(i^2)
}
x <- c(1,2,5,3,10,9,8,11,6)
count <- 0
for (i in x) {
if(i %% 2 == 0)
print(i)
}
for (i in x) {
if(i %% 2 == 0)
count = count+1
}
print(count)
random_number <- sample(1:1000, size = 100)
random_number
for (i in random_number) {
if(i %% 2 == 0)
count = count+1
}
print(count)
data <- data.frame(x1 = 1:5,    # Create example data
x2 = 6:10,
x3 = 11:15)
data
data1 <- data # Replicate example data
for(i in 1:ncol(data1)) {       # for-loop over columns
data1[ , i] <- data1[ , i] + 10
}
data1
data2 <- data                   # Replicate example data
for(i in 1:nrow(data2)) {       # for-loop over rows
data2[i, ] <- data2[i, ] - 100
}
data2
data(iris)                                                 # Loading iris flower data set
head(iris)                                                 # Inspecting iris flower data set
iris1 <- iris                                          # Replicate iris data set
for(i in 1:ncol(iris1)) {                              # Head of for-loop
if(grepl("Width", colnames(iris1)[i])) {             # Logical condition
iris1[ , i] <- iris1[ , i] * 10              # Code block
}
}
head(iris1)
for(i in 1:(ncol(iris) - 1)) {                             # Head of for-loop
plot(1:nrow(iris), iris[ , i])                           # Code block
Sys.sleep(1)                                             # Pause code execution
}
#download.file("http://www.datacarpentry.org/semester-biology/data/locations.zip", "locations.zip")
#unzip("locations.zip")
list.files()
data_files <- list.files(pattern = "locations-2*",
full.names = TRUE)
data_files
str(data_files)
results <- vector(mode = "integer", length = length(data_files))
results
for (i in 1:length(data_files)){
data <- read_csv(data_files[i])
count <- nrow(data)
results[i] <- count
}
results
results <- data.frame(file_name = vector(mode = "character", length = length(data_files)),
count = vector(mode = "integer", length = length(data_files)),
long = vector(mode = "numeric", length = length(data_files)))
results
for (i in 1:length(data_files)){
data <- read_csv(data_files[i])
count <- nrow(data)
results$file_name[i] <- data_files[i]
results$count[i] <- count
results$long[i] <- data$long
results$lat[i] <- data$lat
}
results
#download.file("http://www.datacarpentry.org/semester-biology/data/individual_collar_data.zip", "collar.zip")
#unzip("collar.zip")
x_while <- 0                  # Preliminary specification of data object
while(x_while < 10) {         # Head of while-loop
x_while <- x_while + 1      # Body of while-loop
print(x_while)
}
data3 <- data                   # Replicate example data
i <- 1                          # Create running index
while(i <=2) {                  # Start while-loop
data3[ , i] <- data3[ , i] + 100
i <- i + 1
}
data3 <- data                   # Replicate example data
i <- 1                          # Create running index
while(i <= 2) {                  # Start while-loop
data3[ , i] <- data3[ , i] + 100
i <- i + 1
}
data3 <- data                   # Replicate example data
i <- 1                          # Create running index
while(i <= 2) {                  # Start while-loop
data3[ , i] <- data3[ , i] *100
i <- i + 1
}
View(data)
View(data1)
View(data1)
View(data2)
View(data3)
library("tidyverse")
#for (variable in vector) {
#  do something
#}
for (i in 1:10) {
print(i^2)
}
x <- c(1,2,5,3,10,9,8,11,6)
count <- 0
for (i in x) {
if(i %% 2 == 0)
print(i)
}
for (i in x) {
if(i %% 2 == 0)
count = count+1
}
print(count)
random_number <- sample(1:1000, size = 100)
random_number
for (i in random_number) {
if(i %% 2 == 0)
count = count+1
}
print(count)
data <- data.frame(x1 = 1:5,    # Create example data
x2 = 6:10,
x3 = 11:15)
data
data1 <- data # Replicate example data
for(i in 1:ncol(data1)) {       # for-loop over columns
data1[ , i] <- data1[ , i] + 10
}
data1
data2 <- data                   # Replicate example data
for(i in 1:nrow(data2)) {       # for-loop over rows
data2[i, ] <- data2[i, ] - 100
}
data2
data(iris)                                                 # Loading iris flower data set
head(iris)                                                 # Inspecting iris flower data set
iris1 <- iris                                          # Replicate iris data set
for(i in 1:ncol(iris1)) {                              # Head of for-loop
if(grepl("Width", colnames(iris1)[i])) {             # Logical condition
iris1[ , i] <- iris1[ , i] * 10              # Code block
}
}
head(iris1)
for(i in 1:(ncol(iris) - 1)) {                             # Head of for-loop
plot(1:nrow(iris), iris[ , i])                           # Code block
Sys.sleep(1)                                             # Pause code execution
}
#download.file("http://www.datacarpentry.org/semester-biology/data/locations.zip", "locations.zip")
#unzip("locations.zip")
list.files()
data_files <- list.files(pattern = "locations-2*",
full.names = TRUE)
data_files
str(data_files)
results <- vector(mode = "integer", length = length(data_files))
results
for (i in 1:length(data_files)){
data0 <- read_csv(data_files[i])
count <- nrow(data0)
results[i] <- count
}
results
results <- data.frame(file_name = vector(mode = "character", length = length(data_files)),
count = vector(mode = "integer", length = length(data_files)),
long = vector(mode = "numeric", length = length(data_files)))
results
for (i in 1:length(data_files)){
data0 <- read_csv(data_files[i])
count <- nrow(data0)
results$file_name[i] <- data_files[i]
results$count[i] <- count
results$long[i] <- data0$long
results$lat[i] <- data0$lat
}
results
#download.file("http://www.datacarpentry.org/semester-biology/data/individual_collar_data.zip", "collar.zip")
#unzip("collar.zip")
x_while <- 0                  # Preliminary specification of data object
while(x_while < 10) {         # Head of while-loop
x_while <- x_while + 1      # Body of while-loop
print(x_while)
}
data3 <- data                   # Replicate example data
i <- 1                          # Create running index
while(i <= 2) {                  # Start while-loop
data3[ , i] <- data3[ , i] + 100
i <- i + 1
}
data3
data(iris)                                        # Loading exemplifying data set
head(iris)                                        # Showing head of data in RStudio console
iris2 <- iris                   # Replicate example data
running_index <- 1                                       # Create index
while(is.numeric(iris2[ , running_index])) {              # Start of while-loop
iris2[ , running_index] <- iris2[ , running_index] * 10  # Code block
running_index <- running_index + 1
}
head(iris2)                                               # Showing head of updated data
x_repeat <- 0                 # Preliminary specification of data object
repeat{                       # Head of repeat-loop
x_repeat <- x_repeat + 1    # Body of repeat-loop
print(x_repeat)
if(x_repeat >= 10) {        # Break condition of repeat-loop
break
}
}
data4 <- data                   # Replicate example data
i <- 1                          # Create running index
repeat{                         # Start repeat-loop
data4[ , i] <- data4[ , i] + 100
i <- i + 1
if(i > 2) {
break
}
}
data4
data(iris)                          # Loading exemplifying data frame
head(iris)                          # Head of example data
iris3 <- iris                   # Replicate example data
i <- 0                              # Create running index
repeat{                             # Start
i <- i + 1                        # Update running index
if(!is.numeric(iris3[ , i])) {     # Break condition
break
}
iris3[ , i] <- iris3[ , i] * 10    # Change data
}
head(iris3)
library(tidyverse)
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
str(mammals)
str(fish)
