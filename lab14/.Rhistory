geom_path() + geom_point() +
labs(title= data_files[i], x="Longitude", y="Latitude")
)
}
us_data_files <-lapply(data_files, read_csv)
us_whole_file <- bind_rows(us_data_files)
us_whole_file %>%
summarize("Max Lat"=max(lat),
"Min Lat"=min(lat),
"Max Long"=max(long),
"Min Long"=min(long))
lat <- c(26.6116 , 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f=.5)
us_map <- get_map(bbox, maptype = "terrain", source = "stamen")
for (i in 1:length(data_files)){
us_data <- as.data.frame(read_csv(data_files[i]))
print(
ggmap(us_map)+
geom_path(data=us_data, aes(long, lat))+
geom_point(data=us_data, aes(long,lat))+
labs(title = data_files[i], x = "longitude", y = "latitude")
)
}
?hyper
data(hyper)
nmar(hyper)
summary(hyper)
iplotMap(hyper)
plotMissing(hyper, main="")
plotMissing(hyper, main="", reorder=1)
drop.nullmarkers(hyper)
summary(hyper)
hyper <- calc.genoprob(hyper, step=1)
lod_score <- scanone(hyper)
summary(lod_score ) %>%
arrange(desc(lod))
iplotScanone(lod_score)
summary(lod_score, threshold=1)
iplotlod <- iplotScanone(lod_score, hyper, chr=c(1,2,4,5,6,15))
iplotlod
htmlwidgets::saveWidget(iplotlod, file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
us_individual_collar_files <- list.files("data/us_individual_collar_data", full.names = TRUE)
us_individual_collar_files
# only ggplot
for (i in 1:length(us_individual_collar_files)){
us_individual_plots <- as.data.frame(read_csv(us_individual_collar_files[i]))
print(
ggplot(us_individual_plots, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = "Collar Data", x = "Longitude", y = "Latitude")
)
}
data_list <- lapply(us_individual_collar_files, read_csv)
us_collar_data_all <- bind_rows(data_list)
us_collar_data_all %>%
summarise(max_lat=max(lat),
min_lat=min(lat),
max_long=max(long),
min_long=min(long))
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
for (i in 1:length(us_individual_collar_files)){
us_individual_plots <- as.data.frame(read_csv(us_individual_collar_files[i]))
print(
ggmap(map)+
geom_path(data = us_individual_plots, aes(long,lat))+
geom_point(data = us_individual_plots, aes(long,lat))+
labs(title = "Collar Data", x = "Longitude", y = "Latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
nmar(hyper)
iplotMap(hyper)
hyper$pheno
plotMissing(hyper, main="")
plotMissing(hyper, main="", reorder=1)
hyper_new <- drop.nullmarkers(hyper)
hyper_new
nmar(hyper_new)
hyper_new <- calc.genoprob(hyper_new, step=1) #1centimorgan is being used
out.em <- scanone(hyper_new) #looks at the first phenotype by default
#out.em2 <- scanone(hyper, pheno.col=1:3) is used for data with more than 1 phenot and enables you to select columns of interest
summary(out.em)
summary(out.em, threshold=8)
iplotScanone(out.em)
summary(out.em, threshold=1)
iplotScanone(out.em, hyper_new, chr=c(1,2,4,5,6,15))
hyper_plot <- iplotScanone(out.em, hyper_new, chr=c(1,2,4,5,6,15))
htmlwidgets::saveWidget(hyper_plot, file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
collar_data <- list.files("data/us_individual_collar_data", full.names = TRUE)
collar_data
i <- 1
for (i in 1:length(collar_data)){
individuals_us <- as.data.frame(read_csv(collar_data[i]))
print(
ggplot(individuals_us, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
us_collar_list <- lapply(collar_data, read_csv)
us_collar_data_all <- bind_rows(us_collar_list)
us_collar_data_all %>%
summarize(max_lat=max(lat),
min_lat=min(lat),
max_long=max(long),
min_long=min(long))
lat <- c(26.6116, 41.58802)
long <- c(-106.3343, -122.6017)
bbox <- make_bbox(long, lat, f = 0.05)
collar_data_map <- get_map(bbox, maptype = "terrain", source = "stamen")
for (i in 1:length(collar_data)){
final_data_map <- as.data.frame(read_csv(collar_data[i]))
print(
ggmap(collar_data_map)+
geom_path(data = final_data_map, aes(long,lat))+
geom_point(data = final_data_map, aes(long,lat))+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
nmar(hyper) #tells us the num. of markers on each chromosome
iplotMap(hyper)
plotMissing(hyper, main="")
plotMissing(hyper, main="", reorder=1)
nmar(hyper)
hyper_clean <- drop.nullmarkers(hyper)
hyper_clean <- calc.genoprob(hyper_clean, step=1)
hyper_LOD <- scanone(hyper_clean)
summary(hyper_LOD) %>%
arrange(desc(lod))
iplotScanone(hyper_LOD)
summary(hyper_LOD, threshold=1)
iplotScanone(hyper_LOD, hyper_clean, chr=c(1, 2, 4, 5, 6, 15))
hyper_lod_interact <- iplotScanone(hyper_LOD, hyper_clean, chr=c(1, 2, 4, 5, 6, 15))
htmlwidgets::saveWidget(hyper_lod_interact, file="iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
collar <- list.files(path = "data/us_individual_collar_data", full.names = TRUE)
for (i in 1:length(data)){
data0 <- as.data.frame(read_csv(collar[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar[i], x = "longitude", y = "latitude")
)
}
all_collars <- lapply(collar, read_csv)
full_tracking_data <- bind_rows(all_collars)
full_tracking_data
full_tracking_data %>%
summarise(max_lat = max(lat), min_lat = min(lat), max_long = max(long), min_long = min(long))
lat <- c(26.6116, 41.58802)
long <- c(-106.3343, -122.6017)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
for (i in 1:length(collar)){
data0 <- as.data.frame(read_csv(collar[i]))
print(
ggmap(map)+
geom_path(data = data0, aes(long, lat))+
geom_point(data = data0, aes(long, lat))+
labs(title = "Tracking Info" [i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
nmar(hyper)
iplotMap(hyper)
plotMissing(hyper, main = "")
plotMissing(hyper, main = "", reorder = 1)
#Individuals 50-100 are missing lots of genotype data
hyper_dropped <- drop.nullmarkers(hyper)
nmar(hyper_dropped)
nmar(hyper)
hyper_dropped <- calc.genoprob(hyper_dropped, step=1)
qtl_scan <- scanone(hyper_dropped)
qtl_scan
summary(qtl_scan)
iplotScanone(qtl_scan)
summary(qtl_scan, threshold=1)
plot <- iplotScanone(qtl_scan, chr = c(1, 2, 4, 5, 6, 15), hyper_dropped)
plot
htmlwidgets::saveWidget(plot, file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
us_data <- list.files("data/us_individual_collar_data", full.names = TRUE)
us_data
for (i in 1:length(us_data)){
data <- as.data.frame(read_csv(us_data[i]))
print(
ggplot(data, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = us_data[i], x = "longitude", y = "latitude")
)
}
us_data_list <- lapply(us_data, read_csv)
us_collar_data_all <- bind_rows(us_data_list)
us_collar_data_all %>%
summarise(max_lat=max(lat),
min_lat=min(lat),
max_long=max(long),
min_long=min(long))
lat <- c(26.6116	, 41.58802	)
long <- c(-122.6017, -106.3343	)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
for (i in 1:length(us_data)){
data <- as.data.frame(read_csv(us_data[i]))
print(
ggmap(map)+
geom_path(data = data, aes(long,lat))+
geom_point(data = data, aes(long,lat))+
labs(title = us_data[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
nind(hyper)
nphe(hyper)
nchr(hyper)
totmar(hyper)
nmar(hyper)
plot.map(hyper)
plotPheno(hyper,col=1)
iplotMap(hyper)
plotMissing(hyper, main="")
plotMissing(hyper, main="", reorder=1)
summary(hyper)
hyper1<-drop.nullmarkers(hyper)
hyper1
totmar(hyper1)
nmar(hyper1)
hyper2 <- calc.genoprob(hyper1, step=1)
LOD_score <- scanone(hyper2)
summary(LOD_score,pheno.col=1)
summary(LOD_score, threshold=3)
iplotScanone(LOD_score)
summary(LOD_score, threshold=1)
iplotScanone(LOD_score,chr = c(1,2,4,5,6,15))
iplotScanone(LOD_score,chr = c(1,2,4,5,6,15),hyper2)
hyper_iplotscanone<-iplotScanone(LOD_score,chr = c(1,2,4,5,6,15),hyper2)
htmlwidgets::saveWidget(hyper_iplotscanone,file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
collar_data <- list.files(path = "data/us_individual_collar_data", full.names = TRUE)
collar_data
#why doesn't the code used in lab 12 for the spider data work?
for (i in 1:length(collar_data)){
data <- as.data.frame(read_csv(collar_data[i]))
print(
ggplot(data, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
collar_list <- lapply(collar_data, read_csv)
full_collar_data <- bind_rows(collar_list)
summary(full_collar_data)
lat <- c(26.61, 41.59)
long <- c(-122.6, -106.3)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
for (i in 1:length(collar_data)){
data <- as.data.frame(read_csv(collar_data[i]))
print(
ggmap(map1)+
geom_path(data = data, aes(long,lat))+
geom_point(data = data, aes(long,lat))+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}# seems like one of them is a little messed up- shows the collar data ranging into the ocean.
#?hyper
data(hyper)
summary(hyper)
plotMap(hyper)
plotPheno(hyper)
iplotMap(hyper)
plotMissing(hyper, main="", reorder=1)
#the middle group of people seem to be missing a lot of data.
drop.nullmarkers(hyper)
hyper2 <- drop.nullmarkers(hyper)
hyper3 <- calc.genoprob(hyper2, step=1)
LOD_score <- scanone(hyper3)
summary(LOD_score,pheno.col=1)
summary(LOD_score, threshold=1)
#use LOD_score to get a table, summary(hyper3) gives the actual summary
iplotScanone(LOD_score, chr=c(1,2,4,5,6,15))
iplotScanone(LOD_score, chr=c(1,2,4,5,6,15), hyper3)
hyper_iplotscanone<-iplotScanone(LOD_score,chr = c(1,2,4,5,6,15),hyper3)
htmlwidgets::saveWidget(hyper_iplotscanone,file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
collar_data <- list.files("data/us_individual_collar_data", pattern = "collar-data-*", full.names = TRUE)
for (i in 1:length(collar_data)){
data0 <- as.data.frame(read_csv(collar_data[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
collar_merged <- lapply(collar_data, read_csv) %>%
bind_rows()
collar_merged
collar_merged %>%
summary()
lat <- c(26.61, 41.59)
long <- c(-122.6, -106.3)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(collar_map)
for (i in 1:length(collar_data)){
data1 <- as.data.frame(read_csv(collar_data[i]))
print(
ggmap(collar_map)+
geom_path(data = data1, aes(long,lat))+
geom_point(data = data1, aes(long,lat))+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
plot.map(hyper)
iplotMap(hyper)
plotMissing(hyper, main="", reorder=1)
summary(hyper)
drop.nullmarkers(hyper)
hyper_drop <- drop.nullmarkers(hyper)
summary(hyper_drop)
hyper_LOD <- calc.genoprob(hyper_drop, step = 1)
summary(hyper_LOD)
hyper_score <- scanone(hyper_LOD, pheno.col = 1)
hyper_score
iplotScanone(hyper_score)
summary(hyper_score, threshold = 1)
iplotScanone(hyper_score, chr=c(1,2,4,5,6,15))
hyper_scanone<-iplotScanone(hyper_score,chr = c(1,2,4,5,6,15), hyper_LOD)
htmlwidgets::saveWidget(hyper_scanone,file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
collar_data <- list.files("data/us_individual_collar_data", full.names = TRUE)
collar_data
for(i in 1:length(collar_data)){
individual_movements <- as.data.frame(read.csv(collar_data[i]))
print(
ggplot(individual_movements, aes(x = long, y = lat))+
geom_path()+
geom_point()+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
collar_merge <- lapply(collar_data, read_csv) %>%
bind_rows()
collar_merge
collar_merge %>%
summarise(min_lat = min(lat, na.rm=T),
max_lat = max(lat, na.rm=T),
min_long = min(long, na.rm=T),
max_long = max(long, na.rm=T),
n=n())
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(collar_map)
for (i in 1:length(collar_data)){
data1 <- as.data.frame(read_csv(collar_data[i]))
print(
ggmap(collar_map)+
geom_path(data = data1, aes(long,lat))+
geom_point(data = data1, aes(long,lat))+
labs(title = collar_data[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
nind(hyper)
nphe(hyper)
nchr(hyper)
totmar(hyper)
nmar(hyper)
iplotMap(hyper)
plotMissing(hyper, main = "")
plotMissing(hyper, main="", reorder=1)
#The missing data seems to concentrate in the 50-200 range.
hyper_new <- drop.nullmarkers(hyper)
summary(hyper_new)
summary(hyper)
nmar(hyper)
nmar(hyper_new)
#Only one gene marker got dropped, from chromosome 14.
hyper_calc <- calc.genoprob(hyper_new, step=1)
hyper_LODscores <- scanone(hyper_calc)
summary(hyper_LODscores) %>%
arrange(desc(lod))
#D4Mit164 (on chromosome 4) has the highest LOD score
iplotScanone(hyper_LODscores)
summary(hyper_LODscores, threshold = 1)
hyper_lod_plot <- iplotScanone(hyper_LODscores, chr=c(1,2,4,5,6,15))
hyper_lod_plot
#The marker with the highest LOD score (8.09) is D4Mit164. This genotype must be linked to the phenotype of high blood pressure.
htmlwidgets::saveWidget(hyper_lod_plot, file="hyper_iplotScanone.html")
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
library(lubridate)
collar_files <- list.files("data/us_individual_collar_data", pattern = "collar-data-*", full.names = TRUE)
collar_files
for (i in 1:length(collar_files)){
data0 <- as.data.frame(read_csv(collar_files[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
collar_merge0 <- lapply(collar_files, read_csv) %>%
bind_rows()
collar_merge0
collar_merge0 %>%
summarise(min_lat = min(lat, na.rm=T),
max_lat = max(lat, na.rm=T),
min_long = min(long, na.rm=T),
max_long = max(long, na.rm=T),
n=n())
lat <- c(26.6116, 41.58802)
long <- c(-122.6017, -106.3343)
bbox <- make_bbox(long, lat, f = 0.05)
collar_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(collar_map)
for (i in 1:length(collar_files)){
data1 <- as.data.frame(read_csv(collar_files[i]))
print(
ggmap(collar_map)+
geom_path(data = data1, aes(long,lat))+
geom_point(data = data1, aes(long,lat))+
labs(title = collar_files[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
summary(hyper)
plot.map(hyper)
nmar(hyper)
iplotMap(hyper)
plotMissing(hyper, main="", reorder=1)
drop.nullmarkers(hyper)
summary(hyper)
hyper_new <- drop.nullmarkers(hyper)
summary(hyper_new)
hyper_calcLOD <- calc.genoprob(hyper_new, step=1)
hyper_scores <- scanone(hyper_calcLOD)
hyper_scores
summary(hyper_scores,pheno.col=1)
iplotScanone(hyper_scores)
summary(hyper_scores, threshold = 1)
iplotScanone(hyper_scores, chr=c(1,2,4,5,6,15))
hyper_iplotscanone<-iplotScanone(hyper_scores,chr = c(1,2,4,5,6,15), hyper_calcLOD)
htmlwidgets::saveWidget(hyper_iplotscanone,file="hyper_iplotScanone.html")
