select_if(fish, ~!is.numeric(.))
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
anyNA(mammals)
anyNA(mammals)
mean(mammals$max. life)
anyNA(mammals)
mean(mammals$"max. life")
names(mammals)
select_all(mammals, tolower)
select_all(mammals, ~str_replace(., " ", "_"))
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
names(fish)
select(fish, lakeid, scalelength)
select(fish, fish_id:length)
select(fish, -fish_id, -annnumber, -length, -radii_length_mm)
select(fish, contains("length"))
select(fish, starts_with("radii"))
select(fish, matches("a.+er"))
select_if(fish, is.numeric)
select_if(fish, ~!is.numeric(.))
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
anyNA(mammals)
mean(mammals$"max. life")
names(mammals)
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
head(mammals)
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
filter(fish, lakeid == "AL")
filter(fish, length >= 350)
filter(fish, lakeid != "AL")
filter(fish, length %in% c(167, 175))
filter(fish, between(scalelength, 2.5, 2.55))
filter(fish, near(radii_length_mm, 2, tol = 0.2))
filter(fish, lakeid == "BO")
filter(fish, lakeid != "AR")
filter(fish, near(scalelength, 8, tol = 0.5))
filter(fish, between(scalelength, 2, 4))
filter(fish, lakeid == "AL" & length > 350)
x <- filter(fish, lakeid == "AL" | length > 350)
x
table(x$lakeid)
filter(fish, length > 400, (scalelength > 11 | radii_length_mm > 8))
filter(mammals, family=="Bovidae", mass>=450000)
filter(mammals, order %in% c("Carnivora", "Primates"))
fish %>%
select(lakeid, scalelength) %>%
filter(lakeid == "AL")
fish %>%
select(lakeid, radii_length_mm) %>%
filter(lakeid=="AL" | lakeid=="AR", (between(radii_length_mm, 2, 4)))
fish %>%
arrange(scalelength)
fish %>%
arrange(desc(scalelength))
fish %>%
select(lakeid, length, fish_id, scalelength) %>%
filter(lakeid=="AL") %>%
arrange(fish_id)
fish %>%
mutate(length_mm = length*100) %>%
select(fish_id, length, length_mm)
fish %>%
mutate(length_half=length/2) %>%
select(fish_id, length, length_half)
?msleep
glimpse(fish)
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
str(fish)
names(fish)
select(fish, lakeid, scalelength)
select(fish, fish_id:length)
select(fish, -fish_id, -annnumber, -length, -radii_length_mm)
select(fish, contains("length"))
select(fish, starts_with("radii"))
select(fish, matches("a.+er"))
select_if(fish, is.numeric)
select_if(fish, ~!is.numeric(.))
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
anyNA(mammals)
mean(mammals$"max. life")
names(mammals)
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
head(mammals)
select_all(mammals, tolower)
select_all(mammals, ~str_replace(., " ", "_"))
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
str(fish)
summary(fish)
names(fish)
str(fish)
glimpse(fish)
str(fish)
summary(fish)
names(fish)
select(fish, lakeid, scalelength)
select(fish, "lakeid", "scalelength")
select(fish, fish_id:length)
select(fish, -fish_id, -annnumber, -length, -radii_length_mm)
select(fish, contains("length"))
select(fish, starts_with("radii"))
select(fish, ends_with("id"))
select(fish, contains("fish"))
select(fish, matches("a.+er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
select(fish, matches("a+er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
select(fish, matches("a.+er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
select(fish, matches("a.er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
select(fish, matches("a.+er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
select_if(fish, is.numeric)
str(fish)
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
names(mammals)
anyNA(mammals)
mean(mammals$"max. life")
x <- mammals[ 11]
colMeans(x)
summary(mammals)
mass <- select(mammals, "genus", "species", "mass")
mass <- select(mammals, "genus", "species", "wean_mass")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
head(mammals)
mass <- select(mammals, "genus", "species", "wean_mass")
mass
mass <- select(mammals, "genus", "species", "wean_mass")
mass
select(mammals, -order, -family)
select(mammals, contains("mass"))
select_if(mammals, is.character(.))
select(mammals, contains("mass"))
select_if(mammals, is.character(.))
select_if(mammals, ~is.character(.))
select_if(mammals, ~is.character())
select_if(mammals, ~is.character())
select_if(mammals, ~is.character(.))
select_all(mammals, tolower)
select_all(mammals, ~str_replace(., " ", "_"))
select_all(mammals, ~str_replace(., [ ._], "" ))
select_all(mammals, ~str_replace(., [" "".""_"], "" ))
select_all(mammals, ~str_replace(., "[ ./]", "" ))
select_all(mammals, ~str_replace(., "[ ./_]", "" ))
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
str(fish)
summary(fish)
names(fish)
select(fish, "lakeid", "scalelength")
select(fish, fish_id:length)
select(fish, -fish_id, -annnumber, -length, -radii_length_mm)
select(fish, contains("length"))
select(fish, starts_with("radii"))
select(fish, ends_with("id"))
select(fish, contains("fish"))
select(fish, matches("a.+er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
str(fish)
select_if(fish, is.numeric)
select_if(fish, ~!is.numeric(.))
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
anyNA(mammals)
mean(mammals$"max. life")
x <- mammals[ 11]
colMeans(x)
summary(mammals)
names(mammals)
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
head(mammals)
mass <- select(mammals, "genus", "species", "wean_mass")
mass
select(mammals, -order, -family)
select(mammals, contains("mass"))
select_if(mammals, ~is.character(.))
#all variable
select_all(mammals, tolower)
select_all(mammals, ~str_replace(., "[ ./_]", "" ))
select_all(mammals, ~str_replace(., "[ ._/]", "" ))
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_year="litters/year")
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
str(fish)
summary(fish)
names(fish)
select(fish, "lakeid", "scalelength")
select(fish, fish_id:length)
select(fish, -fish_id, -annnumber, -length, -radii_length_mm)
select(fish, contains("length"))
select(fish, starts_with("radii"))
select(fish, ends_with("id"))
select(fish, contains("fish"))
select(fish, matches("a.+er"))
#	The plus sign indicates one or more occurrences of the preceding element. For example, ab+c matches "abc", "abbc", "abbbc", and so on, but not "ac".
# Matches any single character (many applications exclude newlines, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included).
str(fish)
select_if(fish, is.numeric)
select_if(fish, ~!is.numeric(.))
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
anyNA(mammals)
mean(mammals$"max. life")
x <- mammals[ 11]
colMeans(x)
summary(mammals)
names(mammals)
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_year="litters/year")
head(mammals)
mass <- select(mammals, "genus", "species", "wean_mass")
mass
select(mammals, -order, -family)
select(mammals, contains("mass"))
select_if(mammals, ~is.character(.))
#all variable
select_all(mammals, tolower)
select_all(mammals, tolower)
select_all(mammals, ~str_replace(., "[ ._/]", "" ))
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
filter(fish, lakeid == "AL")
filter(fish, length >= 350)
filter(fish, lakeid != "AL")
filter(fish, length %in% c(167, 175))
# %in% operator in R, is used to identify if an element belongs to a vector or Dataframe
filter(fish, between(scalelength, 2.5, 2.55))
filter(fish, near(radii_length_mm, 2, tol = 0.2))
filter(fish, lakeid == "BO")
filter(fish, lakeid != "AR")
filter(fish, near(scalelength, 8, tol = 0.5))
filter(fish, between(scalelength, 2, 4))
filter(fish, lakeid == "AL" & length > 350)
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
filter(fish, lakeid == "AL")
filter(fish, length >= 350)
filter(fish, lakeid != "AL")
filter(fish, length %in% c(167, 175))
filter(fish, between(scalelength, 2.5, 2.55))
filter(fish, near(radii_length_mm, 2, tol = 0.2))
filter(fish, lakeid == "BO")
filter(fish, lakeid != "AR")
filter(fish, near(scalelength, 8, tol = 0.5))
filter(fish, between(scalelength, 2, 4))
filter(fish, lakeid == "AL" & length > 350)
filter(fish, lakeid == "AL" | length > 350)
filter(fish, lakeid == "AL" | length >= 350)
filter(fish, lakeid == "AL" | length >= 350)
x <- filter(fish, lakeid == "AL" | length >= 350)
view(x)
View(x)
filter(fish, lakeid == "AL" | length >= 350)
filter(fish, length > 400, (scalelength > 11 | radii_length_mm > 8))
str(mammals)
names(mammals)
Bovidae
Bovidae <- filter(mammals, family=="Bovidae" & mass > 450000)
Bovidae
mammals_relimited <- select(mammals, "family", "genus", "species", "mass", "gestation")
mammals_relimited
bovidae <- filter(mammals_relimited, family=="Bovidae" & mass > 450000)
bovidae
str(mammals)
summary(mammals)
primate_genera <- filter(mammals, geneus %in% c("Lophocebus", "Erythrocebus", "Macaca"))
primate_genera <- filter(mammals, genus %in% c("Lophocebus", "Erythrocebus", "Macaca"))
primate_genera
primate_genera_relimited <- select(primate_genera, "newborn", "mass", "gestation")
primate_genera_relimited
min(primate_genera_relimited)
min(primate_genera_relimited)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
fisheries <- readr::read_csv("data/FAO_1950to2012_111914.csv")
fisheries
str(fisheries)
names(fisheries)
table(fisheries$Country)
glimpse(fisheries)
fisheries$Country <- as.factor(fisheries$Country)
fisheries$`ISSCAAP group#` <- as.factor(fisheries$`ISSCAAP group#`)
fisheries$`ASFIS species#` <- as.factor(fisheries$`ASFIS species#`)
fisheries$`FAO major fishing area` <- as.factor(fisheries$`FAO major fishing area`)
str(fisheries)
fisheries %>%
summarize(ncountries = n_distinct(Country))
n_distinct(fisheries$Country)
fisheries %>%
summarize(ncountries = n_distinct(Country))
table(fisheries$Country)
levels(fisheries$Country)
fisheries_rename <- fisheries %>%
rename(country=Country,
commname=`Common name`,
ASFIS_sciname=`ASFIS species name`,
ASFIS_spcode=`ASFIS species#`,
ISSCAAP_spgroup=`ISSCAAP group#`,
ISSCAAP_spgroupname=`ISSCAAP taxonomic group`,
FAO_area=`FAO major fishing area`,
unit=Measure)
names(fisheries_rename)
head(fisheries_rename)
fisheries_tidy <- fisheries_rename %>%
pivot_longer(-c(country,commname,ASFIS_sciname,ASFIS_spcode,ISSCAAP_spgroup,ISSCAAP_spgroupname,FAO_area,unit),
names_to = "year",
values_to = "catch",
values_drop_na = TRUE)
fisheries_tidy
fisheries_tidy2 <- fisheries_tidy %>%
select(c(country, ISSCAAP_spgroupname, ASFIS_spcode, ASFIS_sciname, year, catch))
fisheries_tidy2
str(fisheries_tidy2)
fisheries_tidy2$catch <- as.numeric(fisheries_tidy2$catch)
glimpse(fisheries_tidy2)
fisheries_tidy2 %>%
summarize(n_taxa=n_distinct(ASFIS_spcode))
n_distinct(fisheries_tidy2$ASFIS_spcode)
n_distinct(fisheries_tidy2$ASFIS_spcode)
fisheries_tidy2 %>%
summarize(n_taxa=n_distinct(ASFIS_spcode))
fisheries_tidy2 %>%
filter(year==2000) %>%
group_by(country) %>%
summarize(catch_total=sum(catch, na.rm=T)) %>%
arrange(desc(catch_total))
fisheries_tidy2$year <- as.numeric(fisheries_tidy2$year)
fisheries_tidy2 %>%
filter(str_detect(ASFIS_sciname, "Sardina")) %>%
filter(year>=1990 & year<=2000) %>%
group_by(country) %>%
summarize(catch_total=sum(catch, na.rm=T)) %>%
arrange(desc(catch_total))
fisheries_tidy2 %>%
filter(str_detect(ISSCAAP_spgroupname, "Squids")) %>%
filter(year>=2008 & year<=2012) %>%
group_by(country) %>%
summarize(catch_total=sum(catch, na.rm=T)) %>%
arrange(desc(catch_total))
fisheries_tidy2 %>%
filter(str_detect(ISSCAAP_spgroupname, "Squids")) %>%
filter(year>=2008 & year<=2012) %>%
group_by(ASFIS_sciname) %>%
summarize(catch_total=sum(catch, na.rm=T)) %>%
arrange((catch_total))
coastal_fish <- fisheries_tidy2 %>%
filter(ISSCAAP_spgroupname=="Miscellaneous coastal fishes") %>%
group_by(ASFIS_sciname) %>%
summarise(total_catch=sum(catch, na.rm=T)) %>%
arrange(desc(total_catch))
coastal_fish
library(tidyverse)
heartrate <- readr::read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
billboard <- readr::read_csv("data/billboard.csv")
billboard
billboard2 <-
billboard %>%
pivot_longer(wk1:wk76, # a range of columns
names_to = "week",
values_to = "rank",
values_drop_na = TRUE #this will drop the NA's
)
billboard2
billboard3 <-
billboard %>%
pivot_longer(-c(artist, track, date.entered), #specific columns
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
billboard3
billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
values_to = "rank",
values_drop_na = TRUE)
qpcr_untidy <- readr::read_csv("data/qpcr_untidy.csv")
qpcr_untidy
qpcr_untidy %>%
pivot_longer(
exp1_rep1:exp3_rep3,
names_to = c("experiment", "replicate"),
names_sep = "_",
values_to = "mRNA_expression")
length_data <- readr::read_csv("data/length_data.csv")
length_data
length_data %>%
transform(length = str_split(length, ";")) %>%
unnest(length)
heartrate2 <- readr::read_csv("data/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
colnames(homerange)
names(homerange)
#colnames(homerange)
str(homerange)
summary(homerange)
glimpse(homerange)
class(homerange$taxon)
homerange$taxon <- as.factor(homerange$taxon)
homerange$order <- as.factor(homerange$order)
levels(homerange$taxon)
levels(homerange$order)
View(homerange)
head(taxa)
taxa <- select(homerange, "taxon", "common.name", "class", "order", "family", "genus", "species")
head(taxa)
table(homerange$taxon)
table(homerange$trophic.guild)
carnivores <- filter(homerange, trophic.guild=="carnivore")
str(carnivores)
head(carnivores)
herbivores <- filter(homerange, trophic.guild=="herbivore")
str(herbivores)
head(herbivores)
(carnivores$mean.hra.m2, na.rm = T)
mean(carnivores$mean.hra.m2, na.rm = T)
carnivores$mean.hra.m2
anyNA(carnivores$mean.hra.m2)
anyNA(herbivores$mean.hra.m2)
carnivores$mean.hra.m2
carnivores$mean.hra.m2
herbivores$mean.hra.m2
carnivores$mean.hra.m2
herbivores$mean.hra.m2
anyNA(carnivores$mean.hra.m2)
anyNA(herbivores$mean.hra.m2)
carnivores$mean.hra.m2
herbivores$mean.hra.m2
mean(carnivores$mean.hra.m2, na.rm = T)
mean(herbivores$mean.hra.m2, na.rm = T)
anyNA(carnivores$mean.hra.m2)
anyNA(herbivores$mean.hra.m2)
deer <-
homerange %>%
filter(family=="cervidae") %>%
select(family, genus, species, mean.mass.g, log10.mass) %>%
arrange(desc(log10.mass))
deer
deer_1 <- filter(homerange, family=="cervidae")
head(deer_1)
deer_2 <- select(deer_1, "mean.mass.g", "log10.mass", "family", "genus", "species")
head(deer_2)
deer <- arrange(deer_2, desc(log10.mass))
head(deer)
deer_1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
head(deer_1)
deer_2 <- filter(deer_1, family=="cervidae")
head(deer_2)
deer <- arrange(deer_2, desc(log10.mass))
head(deer)
snakes <-
homerange %>%
filter(taxon=="snakes") %>%
arrange(log10.hra)
snakes
snakes_only <- filter(homerange, taxon=="snakes")
snakes_arranged <- arrange(snakes_only, log10.hra)
head(snakes_arranged)
snakes <-
homerange %>%
filter(taxon=="snakes") %>%
arrange(log10.hra)
head(snakes)
min(snakes_only$log10.hra)
snakes_arranged <- arrange(snakes_only, log10.hra)
head(snakes_arranged)
min(snakes_only$log10.hra)
